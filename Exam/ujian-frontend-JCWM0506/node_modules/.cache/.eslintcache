[{"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\index.js":"1","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\App.js":"2","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reportWebVitals.js":"3","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\index.js":"4","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\checkoutPage.js":"5","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\cartPage.js":"6","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\notfoundPage.js":"7","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\helper.js":"8","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\components\\navbar.js":"9","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\authPage.js":"10","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\homePage.js":"11","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\index.js":"12","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\productReducer.js":"13","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\summaryReducer.js":"14","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\authReducer.js":"15","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\transactionAction.js":"16","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\authAction.js":"17","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\productAction.js":"18"},{"size":827,"mtime":1618820970276,"results":"19","hashOfConfig":"20"},{"size":1867,"mtime":1618820970271,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1618820970280,"results":"22","hashOfConfig":"20"},{"size":294,"mtime":1618820970279,"results":"23","hashOfConfig":"20"},{"size":6264,"mtime":1619349644948,"results":"24","hashOfConfig":"20"},{"size":6042,"mtime":1619168804043,"results":"25","hashOfConfig":"20"},{"size":347,"mtime":1618820970279,"results":"26","hashOfConfig":"20"},{"size":110,"mtime":1618839079729,"results":"27","hashOfConfig":"20"},{"size":2429,"mtime":1619162040876,"results":"28","hashOfConfig":"20"},{"size":4731,"mtime":1619098477149,"results":"29","hashOfConfig":"20"},{"size":6427,"mtime":1619162446264,"results":"30","hashOfConfig":"20"},{"size":98,"mtime":1618820970272,"results":"31","hashOfConfig":"20"},{"size":356,"mtime":1618820970280,"results":"32","hashOfConfig":"20"},{"size":357,"mtime":1618820970280,"results":"33","hashOfConfig":"20"},{"size":562,"mtime":1618820970279,"results":"34","hashOfConfig":"20"},{"size":179,"mtime":1618820970273,"results":"35","hashOfConfig":"20"},{"size":643,"mtime":1618820970271,"results":"36","hashOfConfig":"20"},{"size":187,"mtime":1618820970272,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1pzrj36",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\index.js",[],["79","80"],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\App.js",["81"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport AuthPage from './pages/authPage'\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport HomePage from './pages/homePage';\r\nimport NotFound from './pages/notfoundPage';\r\nimport NavbarComp from './components/navbar';\r\nimport { URL_API } from './helper';\r\nimport { authLogin } from './action';\r\nimport { getProductAction } from './action';\r\nimport CartPage from './pages/cartPage';\r\nimport CheckoutPage from './pages/checkoutPage';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reLogin()\r\n    this.getProducts()\r\n  }\r\n\r\n  reLogin = () => {\r\n    let idToken = localStorage.getItem(\"tkn_id\")\r\n    console.log('idToken', idToken)\r\n    axios.get(URL_API+`/users?id=${idToken}`)\r\n    .then(response => {\r\n      console.log('relogin', response.data)\r\n      this.props.authLogin(response.data[0])\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  getProducts() {\r\n    axios.get(URL_API+`/products`)\r\n    .then(response => {\r\n        console.log(\"product list\", response.data)\r\n        this.props.getProductAction(response.data)\r\n    })\r\n    .catch(error => {\r\n        console.log(error)\r\n    })\r\n  }\r\n\r\n  render() { \r\n    return (  \r\n      <div>\r\n        <NavbarComp/>\r\n        <Switch>\r\n          <Route path=\"/login\" component={AuthPage}/>\r\n          <Route path=\"/cart\" component={CartPage}/>\r\n          <Route path=\"/checkout\" component={CheckoutPage}/>\r\n          <Route path=\"/\" component={HomePage} exact/>\r\n          <Route path=\"*\" component={ NotFound }/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default connect(null, {authLogin, getProductAction})(App);\r\n","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reportWebVitals.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\index.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\checkoutPage.js",["82","83"],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\cartPage.js",["84","85","86"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { URL_API } from '../helper';\r\nimport axios from 'axios';\r\nimport { updateCart } from '../action/authAction'\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, Input, Button, ModalHeader, ModalBody, ModalFooter, Table, Toast, ToastBody, ToastHeader } from 'reactstrap';\r\n\r\nclass CartPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            data: this.props.product_list\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        console.log('toggle')\r\n        this.setState({ modal: !this.state.modal })\r\n    }\r\n\r\n    delete = (id) => {\r\n        this.props.cart.splice(id, 1)\r\n        axios.patch(URL_API + `/users/${this.props.id}`, { cart: this.props.cart })\r\n            .then(response => {\r\n                this.props.updateCart([...this.props.cart])\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    } \r\n\r\n    removeQty = (index) => {\r\n        let id = localStorage.getItem('tkn_id')\r\n        this.props.updateCart([...this.props.cart])\r\n        let cart = this.props.cart\r\n        let cartEdit = this.props.cart[index]\r\n        if (cartEdit.qty > 1) {\r\n            cartEdit.qty -= 1\r\n            axios.patch(URL_API+`/users/${id}`, {\r\n                cart\r\n            })\r\n            .then(response => {\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error\", error)\r\n            })    \r\n        }\r\n    }\r\n\r\n    addQty = (index) => {\r\n        let product = this.props.product_list\r\n        let id = localStorage.getItem('tkn_id')\r\n        this.props.updateCart([...this.props.cart])\r\n        let cart = this.props.cart\r\n        let cartEdit = this.props.cart[index]\r\n        let indexFound = product.findIndex(item => item.name === cartEdit.name)\r\n        console.log('index', indexFound)\r\n        console.log('Product stock', product[indexFound].stock)\r\n        if (product[indexFound].stock > this.props.cart[index].qty) {\r\n            cartEdit.qty += 1\r\n            axios.patch(URL_API+`/users/${id}`, {\r\n                cart\r\n            })\r\n            .then(response => {\r\n                console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error\", error)\r\n            })          \r\n        }\r\n        else {\r\n            alert('Stock is not enough')\r\n        }\r\n    }\r\n    \r\n    printTable = () => {\r\n        let cart = this.props.cart\r\n        console.log(cart)\r\n        return cart.map((item, index) => {\r\n            return  <tr>\r\n                        <th>{index+1}</th>\r\n                        <td>{item.name}</td>\r\n                        <td>\r\n                            <span style={{display: 'flex', alignItems:'center'}}>\r\n                                <Button outline size=\"sm\" onClick={() => this.removeQty(index)}>remove</Button>\r\n                                <Input className=\"text-center\" placeholder='qty' value={item.qty} style={{width: '50%', display:'inline-block'}} />\r\n                                <Button outline size=\"sm\" color=\"primary\" onClick={() => this.addQty(index)}>add</Button>\r\n                            </span>\r\n                        </td>\r\n                        <td>IDR {item.subtotal}</td>\r\n                        <td><Button outline color=\"danger\" onClick={() => this.delete(index)} className=\"d-flex flex-column align-items-center\" size=\"sm\">Delete</Button></td>\r\n                    </tr>\r\n        })\r\n    }\r\n\r\n    checkOut = () => {\r\n        console.log('checkout', this.props.cart)\r\n        let user_id = localStorage.getItem('tkn_id')\r\n        let email = this.props.email\r\n        let cart = this.props.cart \r\n        let status = 'UNPAID'\r\n        console.log(user_id, email, cart)\r\n        axios.post(URL_API+`/userTransactions`, {\r\n            user_id, email, cart, status\r\n        })\r\n        .then(response => {\r\n            console.log('Response after post', response)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('PROPS', this.props.product_list)\r\n        return (  \r\n            <div className=\"container\">\r\n                <h1 className=\"text-center my-4\">User Cart</h1>\r\n                <div>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>No</th>\r\n                        <th>Product Name</th>\r\n                        <th>Amount</th>\r\n                        <th>Subtotal</th>\r\n                        <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.printTable()}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                <Button color=\"warning\" block onClick={this.toggle}>Check out</Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} style={{width: '70%'}}>\r\n                <ModalHeader toggle={this.toggle} charCode=\"x\">User Confirmation</ModalHeader>\r\n                <ModalBody>\r\n                <p>Will pay after this</p>\r\n                </ModalBody>\r\n                <ModalFooter className=\"d-flex justify-content-between\">\r\n                    <Button className=\"d-flex justify-content-center\" outline color=\"secondary\" onClick={this.toggle}>Continue Shopping</Button>\r\n                    <Link to=\"/checkout\" style={{textDecoration: 'none'}}>\r\n                        <Button onClick={this.checkOut} className=\"d-flex justify-content-center\" color=\"success\">Go to shopping cart</Button>{' '}\r\n                    </Link>\r\n                </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authReducer, productReducers }) => {\r\n    return {\r\n        ...authReducer,\r\n        ...productReducers\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, {updateCart}) (CartPage);","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\notfoundPage.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\helper.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\components\\navbar.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\authPage.js",["87","88"],"import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, InputGroup } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { URL_API } from '../helper';\r\nimport { connect } from 'react-redux';\r\nimport { authLogin } from '../action';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass AuthenticationPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            char: 'red',\r\n            word: 'red',\r\n            number: 'red',\r\n            login: false\r\n        }\r\n    }\r\n\r\n    passValidation = () => {\r\n        let wordR = /[A-Za-z]/g\r\n        let numberR = /[0-9]/g\r\n        let password = this.inPassword.value\r\n        let l = this.inPassword.value.length\r\n        let c = this.refs.char.textContent\r\n        let n = this.refs.number.textContent\r\n        console.log('char',l, c, n, password)\r\n        let wordVal = password.match(wordR)\r\n        let numberVal = password.match(numberR)\r\n        if (wordVal) {\r\n            this.setState({word: 'green'})\r\n        }\r\n        else {\r\n            this.setState({word: 'black'})\r\n        }\r\n        if (numberVal) {\r\n            this.setState({number: 'green'})\r\n        }\r\n        else {\r\n            this.setState({number: 'black'})\r\n        }\r\n        if (l > 5) {\r\n            this.setState({char: 'green'})\r\n        }\r\n        else {\r\n            this.setState({char: 'black'})\r\n        }\r\n        if (wordVal && numberVal && l > 5) {\r\n            this.setState({login: true})\r\n        }\r\n    }\r\n\r\n    userLogin = () => {\r\n        let email = this.inEmail.value\r\n        let password = this.inPassword.value\r\n        if (this.state.login) {\r\n            console.log('Pass valid')\r\n            let cart = []\r\n            console.log(email, password)\r\n            axios.get(URL_API+`/users?email=${email}`)\r\n            .then(response => {\r\n                console.log('response login', response.data)\r\n                localStorage.setItem('tkn_id', response.data[0].id)\r\n                if (response.data.length > 0) {\r\n                    console.log(\"Email already exist!\")\r\n                    this.props.authLogin(response.data[0])\r\n                }\r\n                else {\r\n                    axios.post(URL_API+`/users`, {\r\n                        email,\r\n                        password,\r\n                        cart\r\n                    })\r\n                    .then(response => {\r\n                        console.log(response.data)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n                }\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else {\r\n            alert('Password not valid')\r\n        }\r\n        \r\n    }\r\n\r\n    render() { \r\n        console.log(\"authpage\", this.props.id > 0)\r\n        if (this.props.id > 0) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (  \r\n            <div className=\"container\">\r\n                <h1 className=\"text-center my-4\">User Login and Logout</h1>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" innerRef={el => this.inEmail = el} placeholder=\"Enter your email address ...\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Password</Label>\r\n                        <InputGroup>\r\n                            <Input type={this.state.passType} type=\"password\" name=\"password\" innerRef={el => this.inPassword = el} placeholder=\"Enter your password ...\" onChange={this.passValidation}/>\r\n                        </InputGroup>\r\n                        <div>\r\n                            <p>Password must be containing the following:</p>\r\n                            <ul>\r\n                                <li ref=\"char\" style={{color: this.state.char}}>6 character</li>\r\n                                <li ref=\"word\" style={{color: this.state.word}}>Include word</li>\r\n                                <li ref=\"number\" style={{color: this.state.number}}>Include number</li>\r\n                            </ul>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <button type=\"button\" onClick={this.userLogin} class=\"btn btn-primary btn-lg btn-block my-3\">Login</button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({authReducer}) => {\r\n    return {\r\n        ...authReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {authLogin})(AuthenticationPage);","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\pages\\homePage.js",["89","90","91","92"],"import React, { Component } from 'react';\r\nimport { URL_API } from '../helper';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { getProductAction } from '../action/productAction'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { updateCart } from '../action/authAction'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, Modal, Input, Toast, ToastBody, ToastHeader,\r\n    CardTitle, CardSubtitle, Button, ModalHeader, ModalBody, ModalFooter\r\n  } from 'reactstrap';\r\n\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            modal: false,\r\n            count: 1,\r\n            redirect: false,\r\n            toast: false,\r\n            addProduct: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts()\r\n    }\r\n\r\n    getProducts() {\r\n        axios.get(URL_API+`/products`)\r\n        .then(response => {\r\n            // console.log(\"product list\", response.data)\r\n            this.props.getProductAction(response.data)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    toggle = (item) => {\r\n        if (this.props.id === null) {\r\n            alert('Login first')\r\n            this.setState({redirect: true})\r\n        }\r\n        else if (item === undefined) {\r\n            this.setState({ modal: !this.state.modal })\r\n        }\r\n        else {\r\n            this.setState({ modal: !this.state.modal })\r\n            this.setState({ addProduct: item })\r\n        }\r\n    }\r\n\r\n    add = (index) => {\r\n        if (this.state.count < this.props.product_list[index].stock) {\r\n            this.setState(state => ({\r\n                count: state.count + 1\r\n            }))\r\n        }\r\n        else {\r\n            alert('Stock not enough')\r\n        }\r\n    }\r\n\r\n    remove = () => {\r\n        if (this.state.count > 1 ) {\r\n            this.setState({count: this.state.count - 1})\r\n        }\r\n    }\r\n\r\n    addtoCart = (name, img, price) => {\r\n        let userID = this.props.id\r\n        let qty = this.state.count\r\n        let subtotal = qty * price\r\n        // console.log('Add to Cart', userID, name, img, qty, subtotal)\r\n        let cart = this.props.cart\r\n        let index = cart.findIndex(item => item.name === name)\r\n        // console.log('Findindex', index)\r\n        if (index > -1) {\r\n            cart[index].qty += qty\r\n        }\r\n        else {\r\n            cart.push({\r\n                name, img, qty, subtotal\r\n            })\r\n        }\r\n        axios.patch(URL_API+`/users/${userID}`, {\r\n            cart: this.props.cart\r\n        })\r\n        .then(response => {\r\n            console.log(response.data)\r\n            setTimeout(() => this.setState({ toast: !this.state.toast, addProduct: {} }), 2000)\r\n            this.props.updateCart([...cart])\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Error\", error)\r\n        })\r\n        this.toggle()\r\n    }\r\n\r\n    printCard() {\r\n        return this.props.product_list.map((item, index) => {\r\n            return  <div className=\"col-md-3 col-6\">\r\n                    <Card>\r\n                        <CardImg width=\"100\" src={item.img} alt=\"Card image cap\" />\r\n                        <CardBody>\r\n                        <CardTitle tag=\"h5\">{item.name}</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Price: IDR {item.price}</CardSubtitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Stock: {item.stock}</CardSubtitle>\r\n                            <Button color=\"warning\" block onClick={() => this.toggle(item)}>Add to cart</Button>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </div>\r\n        })\r\n    }\r\n\r\n    render() { \r\n        console.log(\"props cart\", this.props.cart)\r\n        if (this.state.redirect == true) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        return (  \r\n            <div className=\"container-fluid\">\r\n                <h1>Homepage</h1>\r\n                <div>\r\n                <Modal size=\"lg\" isOpen={this.state.modal} toggle={this.toggle} style={{width: '70%'}}>\r\n                    <ModalHeader toggle={this.toggle} charCode=\"x\">Add {this.state.addProduct.name} to cart, define quantity</ModalHeader>\r\n                    <ModalBody>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <img src={this.state.addProduct.img} style={{maxWidth: '100px'}}></img>\r\n                    <span>Total qty:</span>\r\n                        <span style={{width: '30%', display: 'flex', alignItems:'center'}}>\r\n                            <Button outline size=\"sm\" onClick={() => this.remove(this.state.addProduct.id)}>remove</Button>\r\n                            <Input className=\"text-center\" placeholder='qty' value={this.state.count} style={{width: '50%', display:'inline-block'}} />\r\n                            <Button outline size=\"sm\" color=\"primary\" onClick={() => this.add(this.state.addProduct.id)}>add</Button>\r\n                        </span>\r\n                    </div>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"d-flex justify-content-between\">\r\n                        <Button className=\"d-flex justify-content-center\" outline color=\"secondary\" onClick={this.toggle}>Continue Shopping</Button>\r\n                        <Button className=\"d-flex justify-content-center\" color=\"warning\" onClick={() => this.addtoCart(this.state.addProduct.name, this.state.addProduct.img, this.state.addProduct.price)}>Add to shopping cart</Button>{' '}\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Toast isOpen={this.state.toast}>\r\n                    <ToastHeader icon=\"success\">\r\n                        Successfully adding to cart\r\n                    </ToastHeader>\r\n                    <ToastBody>\r\n                        Just one step closer!\r\n                    </ToastBody>\r\n                </Toast>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.printCard()}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ productReducers, authReducer }) => {\r\n    return {\r\n        ...productReducers,\r\n        ...authReducer\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, {getProductAction, updateCart})(HomePage);","D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\index.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\productReducer.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\summaryReducer.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\reducer\\authReducer.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\transactionAction.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\authAction.js",[],"D:\\Course\\P\\Code\\Exam\\ujian-frontend-JCWM0506\\src\\action\\productAction.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":49,"column":34,"nodeType":"103","messageId":"104","endLine":49,"endColumn":36},{"ruleId":"101","severity":1,"message":"105","line":106,"column":19,"nodeType":"103","messageId":"104","endLine":106,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":7,"column":76,"nodeType":"99","messageId":"100","endLine":7,"endColumn":81},{"ruleId":"97","severity":1,"message":"107","line":7,"column":83,"nodeType":"99","messageId":"100","endLine":7,"endColumn":92},{"ruleId":"97","severity":1,"message":"108","line":7,"column":94,"nodeType":"99","messageId":"100","endLine":7,"endColumn":105},{"ruleId":"97","severity":1,"message":"109","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":110,"column":63,"nodeType":"112","messageId":"113","endLine":110,"endColumn":78},{"ruleId":"97","severity":1,"message":"114","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"97","severity":1,"message":"115","line":9,"column":20,"nodeType":"99","messageId":"100","endLine":9,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":120,"column":33,"nodeType":"103","messageId":"104","endLine":120,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":131,"column":21,"nodeType":"118","endLine":131,"endColumn":86},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Toast' is defined but never used.","'ToastBody' is defined but never used.","'ToastHeader' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Link' is defined but never used.","'CardText' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]