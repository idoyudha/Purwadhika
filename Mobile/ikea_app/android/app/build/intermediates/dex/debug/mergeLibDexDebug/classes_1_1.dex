Features
* Omit `exports` and `module` from SystemJS wrapper if possible (#2880)
* Try to use the first letters of names when mangling exports (#2885)

### Bug Fixes
* Avoid conflicts with local variables when using format specific globals to render dynamic imports and file URLs (#2880)
* Do not produce undefined reexports when reexporting from entry points (#2885)

### Pull Requests
* [#2880](https://github.com/rollup/rollup/pull/2880): Deconflict global variables used inside format-specific code (@lukastaegert)
* [#2885](https://github.com/rollup/rollup/pull/2885): Do not produce undefined reexports when reexporting from entry points and refactor chunk linking (@lukastaegert)

## 1.12.5
*2019-05-30*

### Pull Requests
* [#2884](https://github.com/rollup/rollup/pull/2884): Update pluginutils for new micormatch and reduced bundle size (@lukastaegert)

## 1.12.4
*2019-05-27*

### Bug Fixes
* Show correct error stack trace for errors throw in "load" hooks (#2871)

### Pull Requests
* [#2875](https://github.com/rollup/rollup/pull/2875): Mention subfolders in docs (@lukastaegert)
* [#2871](https://github.com/rollup/rollup/pull/2871): Reserve error stack information (@LongTengDao)

## 1.12.3
*2019-05-19*

### Bug Fixes
* Prevent duplicate imports when exports are reexported as default exports (#2866)

### Pull Requests
* [#2755](https://github.com/rollup/rollup/pull/2755): Enable TypeScript strictNullChecks (@edsrzf)
* [#2866](https://github.com/rollup/rollup/pull/2866): Properly deduplicate reexported default exports (@lukastaegert)

## 1.12.2
*2019-05-17*

### Bug Fixes
* Do not fail when using clearScreen:false in watchMode (#2858)
* Properly resolve star reexports when preserving modules (#2860)

### Pull Requests
* [#2858](https://github.com/rollup/rollup/pull/2858): Declare processConfigsErr before use (@humphd)
* [#2860](https://github.com/rollup/rollup/pull/2860): Keep nested exports with preserveModules (@TomCaserta)
* [#2864](https://github.com/rollup/rollup/pull/2864): Cache transitive reexport detection (@lukastaegert)

## 1.12.1
*2019-05-16*

### Bug Fixes
* Extend file name sanitation to also replace "?" and "*" e.g. when preserving modules with the updated commonjs plugin (#2860)
* Do not ignore module transformer that return an empty string (#2861)

### Pull Requests
* [#2860](https://github.com/rollup/rollup/pull/2860): Update to latest plugins and extend file name sanitation (@lukastaegert)
* [#2861](https://github.com/rollup/rollup/pull/2861): Allow transformers to return an empty string (@lukastaegert)

## 1.12.0
*2019-05-15*

### Features
* Add `treeshake.moduleSideEffects` option to allow removing empty imports without a side-effect check (#2844)
* Extend plugin API to allow marking modules as side-effect-free (#2844)
* Extend `this.resolve` plugin context function with an option to skip the `resolveId` hook of the calling plugin (#2844)
* Add `isEntry` flag to `this.getModuleInfo` plugin context function (#2844)
* Distribute Rollup as optimized ES2015 code (#2851)

### Pull Requests
* [#2844](https://github.com/rollup/rollup/pull/2844): Add options and hooks to control module side effects (@lukastaegert)
* [#2851](https://github.com/rollup/rollup/pull/2851): Switch to ES2015 output (@lukastaegert)

## 1.11.3
*2019-05-05*

### Bug Fixes
* Quote es3 keywords in namespace objects (#2825)

### Pull Requests
* [#2825](https://github.com/rollup/rollup/pull/2825): Add es3 support for namespace object import (@sormy)

## 1.11.2
*2019-05-04*

### Bug Fixes
* Prevent a crash when handling circular namespace exports (#2836)

### Pull Requests
* [#2836](https://github.com/rollup/rollup/pull/2836): Make sure circular `export * from X` does not stack overflow (@Swatinem)

## 1.11.1
*2019-05-04*

### Bug Fixes
* Fix an issue where rendered exports were reported as "removed" in the bundle information (#2835)

### Pull Requests
* [#2835](https://github.com/rollup/rollup/pull/2835): Fix `removedExports` to correctly track the exported item (@Swatinem)

## 1.11.0
*2019-05-03*

### Features
* Add `emitChunk` plugin context function to emit additional entry chunks that can be referenced from the code (#2809)
* Allow `manualChunks` to be a function (#2831)
* Omit `.js` extensions in AMD imports to make sure an AMD `baseUrl` would work (#2809)
* Automatically use the name of the imported module as a base for dynamically imported chunks (#2809)
* Add `resolveFileUrl` plugin hook to replace `resolveAssetUrl` and handle emitted chunks as well (#2809)
* Add `resolve` plugin hook to replace `resolveId` and `isExternal` that returns an object (#2829)
* Allow `resolveDynamicImport` to return an `{id, external}` object to also resolve unresolvable dynamic imports to a module (#2829)

### Bug Fixes
* Do not create invalid code if a dynamic import contains nothing but reexports (#2809)
* Do not fail if modules that define a manual chunk depend on each other (#280