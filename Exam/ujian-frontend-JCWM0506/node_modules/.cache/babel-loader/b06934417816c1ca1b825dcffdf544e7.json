{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Course/P/Code/Exam/ujian-frontend-JCWM0506/src/pages/authPage.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, InputGroup } from 'reactstrap';\nimport axios from 'axios';\nimport { URL_API } from '../helper';\nimport { connect } from 'react-redux';\nimport { authLogin } from '../action';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passValidation = () => {\n      let wordR = /[A-Za-z]/g;\n      let numberR = /[0-9]/g;\n      let password = this.inPassword.value;\n      let l = this.inPassword.value.length;\n      let c = this.refs.char.textContent;\n      let n = this.refs.number.textContent;\n      console.log('char', l, c, n, password);\n      let wordVal = password.match(wordR);\n      let numberVal = password.match(numberR);\n\n      if (wordVal) {\n        this.setState({\n          word: 'green'\n        });\n      } else {\n        this.setState({\n          word: 'black'\n        });\n      }\n\n      if (numberVal) {\n        this.setState({\n          number: 'green'\n        });\n      } else {\n        this.setState({\n          number: 'black'\n        });\n      }\n\n      if (l > 5) {\n        this.setState({\n          char: 'green'\n        });\n      } else {\n        this.setState({\n          char: 'black'\n        });\n      }\n\n      if (wordVal && numberVal && l > 5) {\n        this.setState({\n          login: true\n        });\n      }\n    };\n\n    this.userLogin = () => {\n      let email = this.inEmail.value;\n      let password = this.inPassword.value;\n\n      if (this.state.login) {\n        // alert('Pass valid')\n        let cart = [];\n        console.log(email, password);\n        axios.get(URL_API + `/users?email=${email}`).then(response => {\n          console.log(response.data);\n\n          if (response.data.length > 0) {\n            console.log(\"Email already exist!\");\n            this.props.authLogin(response.data[0]);\n          } else {\n            axios.post(URL_API + `/users`, {\n              email,\n              password,\n              cart\n            }).then(response => {\n              console.log(response.data); // save token data to browser\n\n              localStorage.setItem('tkn_id', response.data.id);\n              this.props.authLogin(response.data);\n            }).catch(error => {\n              console.log(error);\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert('Password not valid');\n      }\n    };\n\n    this.state = {\n      char: 'red',\n      word: 'red',\n      number: 'red',\n      login: false\n    };\n  }\n\n  render() {\n    console.log(\"authpage\", this.props.id > 0);\n\n    if (this.props.id > 0) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center my-4\",\n        children: \"User Login and Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            name: \"email\",\n            innerRef: el => this.inEmail = el,\n            placeholder: \"Enter your email address ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: this.state.passType,\n              type: \"password\",\n              name: \"password\",\n              innerRef: el => this.inPassword = el,\n              placeholder: \"Enter your password ...\",\n              onChange: this.passValidation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password must be containing the following:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                ref: \"char\",\n                style: {\n                  color: this.state.char\n                },\n                children: \"6 character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                ref: \"word\",\n                style: {\n                  color: this.state.word\n                },\n                children: \"Include word\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                ref: \"number\",\n                style: {\n                  color: this.state.number\n                },\n                children: \"Include number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.userLogin,\n          class: \"btn btn-primary btn-lg btn-block my-3\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authReducer\n}) => {\n  return { ...authReducer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authLogin\n})(AuthenticationPage);","map":{"version":3,"sources":["/mnt/d/Course/P/Code/Exam/ujian-frontend-JCWM0506/src/pages/authPage.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","InputGroup","axios","URL_API","connect","authLogin","Redirect","AuthenticationPage","constructor","props","passValidation","wordR","numberR","password","inPassword","value","l","length","c","refs","char","textContent","n","number","console","log","wordVal","match","numberVal","setState","word","login","userLogin","email","inEmail","state","cart","get","then","response","data","post","localStorage","setItem","id","catch","error","alert","render","el","passType","color","mapStateToProps","authReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, InputGroup } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { URL_API } from '../helper';\r\nimport { connect } from 'react-redux';\r\nimport { authLogin } from '../action';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass AuthenticationPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            char: 'red',\r\n            word: 'red',\r\n            number: 'red',\r\n            login: false\r\n        }\r\n    }\r\n\r\n    passValidation = () => {\r\n        let wordR = /[A-Za-z]/g\r\n        let numberR = /[0-9]/g\r\n        let password = this.inPassword.value\r\n        let l = this.inPassword.value.length\r\n        let c = this.refs.char.textContent\r\n        let n = this.refs.number.textContent\r\n        console.log('char',l, c, n, password)\r\n        let wordVal = password.match(wordR)\r\n        let numberVal = password.match(numberR)\r\n        if (wordVal) {\r\n            this.setState({word: 'green'})\r\n        }\r\n        else {\r\n            this.setState({word: 'black'})\r\n        }\r\n        if (numberVal) {\r\n            this.setState({number: 'green'})\r\n        }\r\n        else {\r\n            this.setState({number: 'black'})\r\n        }\r\n        if (l > 5) {\r\n            this.setState({char: 'green'})\r\n        }\r\n        else {\r\n            this.setState({char: 'black'})\r\n        }\r\n        if (wordVal && numberVal && l > 5) {\r\n            this.setState({login: true})\r\n        }\r\n    }\r\n\r\n    userLogin = () => {\r\n        let email = this.inEmail.value\r\n        let password = this.inPassword.value\r\n        if (this.state.login) {\r\n            // alert('Pass valid')\r\n            let cart = []\r\n            console.log(email, password)\r\n            axios.get(URL_API+`/users?email=${email}`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data.length > 0) {\r\n                    console.log(\"Email already exist!\")\r\n                    this.props.authLogin(response.data[0])\r\n                }\r\n                else {\r\n                    axios.post(URL_API+`/users`, {\r\n                        email,\r\n                        password,\r\n                        cart\r\n                    })\r\n                    .then(response => {\r\n                        console.log(response.data)\r\n                        // save token data to browser\r\n                        localStorage.setItem('tkn_id', response.data.id)\r\n                        this.props.authLogin(response.data)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else {\r\n            alert('Password not valid')\r\n        }\r\n        \r\n    }\r\n\r\n    render() { \r\n        console.log(\"authpage\", this.props.id > 0)\r\n        if (this.props.id > 0) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (  \r\n            <div className=\"container\">\r\n                <h1 className=\"text-center my-4\">User Login and Logout</h1>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" innerRef={el => this.inEmail = el} placeholder=\"Enter your email address ...\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Password</Label>\r\n                        <InputGroup>\r\n                            <Input type={this.state.passType} type=\"password\" name=\"password\" innerRef={el => this.inPassword = el} placeholder=\"Enter your password ...\" onChange={this.passValidation}/>\r\n                        </InputGroup>\r\n                        <div>\r\n                            <p>Password must be containing the following:</p>\r\n                            <ul>\r\n                                <li ref=\"char\" style={{color: this.state.char}}>6 character</li>\r\n                                <li ref=\"word\" style={{color: this.state.word}}>Include word</li>\r\n                                <li ref=\"number\" style={{color: this.state.number}}>Include number</li>\r\n                            </ul>\r\n                        </div>\r\n                    </FormGroup>\r\n                    <button type=\"button\" onClick={this.userLogin} class=\"btn btn-primary btn-lg btn-block my-3\">Login</button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({authReducer}) => {\r\n    return {\r\n        ...authReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {authLogin})(AuthenticationPage);"]},"metadata":{},"sourceType":"module"}